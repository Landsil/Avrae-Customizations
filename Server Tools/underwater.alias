<drac2>
# Auto applies fire resistance to everyone, let's you track track holding breath and suffocating.
# Work in progress as I try to make this all work via buttons instead of running commands.

# Variables
args       = argparse(&ARGS&)      # Arguments after alias

# Grab custom arguments added by user
target    = args.last("t")        # Shortcut for target
result     = "You need to be in combat"
resultDesc = "and specify argument, check `!help underwater` when in doubt."
thumb     = args.last('thumb', image)
image     = args.last('image', image)
footer    = "!underwater alias made by Landsil"

c = combat()
combatants = ([c.get_combatant(t) for t in args.get('t') if c.get_combatant(t)] if args.get('t') else c.combatants) if c else []

# Check arg for fire and if true check if combat is live, apply fire resistance to everyone if yes.
fire  = "&1&" if "&1&".lower() in ['fire'] else False
if fire:
    response = []
    if c:
        for tArg in combatants:
            p = tArg.add_effect("Underwater", buttons = [{
                "label" : 'Remove "Underwater"',
                "verb" : "leavers water",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
            tArg.add_effect("Fire resistant", passive_effects = {"resistances": ["fire"]}, parent = p, buttons = [{
                "label" : 'Remove "Fire resistant"',
                "verb" : "get's dry",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
            response.append(str(tArg.name))
        result = "The following combatants now have fire resistance:"
        resultDesc  = '\n'.join(response)
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''

# Calculate how long you can hold breath for.
hold  = "&1&" if "&1&".lower() in ['hold', 'dive',] else False
if hold:
    minutes = (constitutionMod+1) if constitutionMod > -1 else 0.5
    if c:
        you = c.get_combatant(name)
        p= you.add_effect("Underwater", buttons = [{
                "label" : 'Remove "Underwater"',
                "verb" : "leavers water",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
        you.add_effect("Diving", duration = minutes*10, parent = p, buttons = [{
                "label" : 'Remove "Diving"',
                "verb" : "surfaces",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
        result     = "You are holding your breath"
        resultDesc = f'You have {minutes*10} rounds before you start suffocating'
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''
    else:
        result     = "You are holding your breath"
        resultDesc = f'You can do this for {minutes*10} rounds or {minutes} minutes'
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''

# Suffocate / drown
suffocate  = "&1&" if "&1&".lower() in ['suffocate', 'choke', 'drown',] else False
if suffocate:
    rounds = max(constitutionMod,1)
    if c:
        you = c.get_combatant(name)
        p= you.add_effect("Underwater", buttons = [{
                "label" : 'Remove "Underwater"',
                "verb" : "leavers water",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
        you.add_effect("Suffocating", duration = rounds, parent = p, buttons = [{
                "label" : 'Remove "Suffocating"',
                "verb" : "get's air",
                "style" : 1,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
        result     = "You are suffocating"
        resultDesc = f'''You will drop to 0 and start dying in **{rounds}** rounds, you can't be healed if you are dying while suffocating'''
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''
    else:
        result     = "You are suffocating"
        resultDesc = f'''You will drop to 0 and start dying in **{rounds}** rounds, you can't be healed if you are dying while suffocating'''
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''

# All via buttons
go  = "&1&" if "&1&".lower() in ['all', 'button', 'buttons','go',] else False
if go:
    if c:
        minutes = (constitutionMod+1) if constitutionMod > -1 else 0.5
        rounds = max(constitutionMod,1)
        for tArg in combatants:
            water = tArg.add_effect("In Water", buttons = [{
                "label" : 'Leave Water',
                "verb" : "leavers water",
                "style" : 3,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            },
            {
                "label" : 'Dive',
                "verb" : "dives under water",
                "style" : 1,
                "automation" : [{
                        "type" : "target",
                        "target" : "self",
                        "effects" : [{
                            "name" : "Diving", 
                            "duration" : minutes*10,
                            "type": "ieffect2",
                            "buttons" : [{
                                "label" : 'Surface',
                                "verb" : "Surfaces",
                                "style" : 3,
                                "automation" : [{
                                        "type" : "remove_ieffect"
                                    }]
                            }]
                        }]
                    }
                ]
            },
            {
                "label" : 'Suffocate',
                "verb" : "dives under water",
                "style" : 2,
                "automation" : [{
                        "type" : "target",
                        "target" : "self",
                        "effects" : [{
                            "name" : "Suffocating", 
                            "duration" : rounds,
                            "type": "ieffect2",
                            "buttons" : [{
                                "label" : 'Get air',
                                "verb" : "Catches air",
                                "style" : 3,
                                "automation" : [{
                                        "type" : "remove_ieffect"
                                    }]
                            }]
                        }]
                    }
                ]
            },
            {
                "label" : 'Dying',
                "verb" : "is dying",
                "style" : 4,
                "automation" : [{
                        "type" : "target",
                        "target" : "self",
                        "effects" : [{
                            "name" : "Dying", 
                            "type" : "damage",
                            "damage" : "{caster.hp}"
                        }]
                    }
                ]
            },
            ])
            tArg.add_effect("Fire resistant", passive_effects = {"resistances": ["fire"]}, parent = water, buttons = [{
                "label" : 'Remove "Fire resistant"',
                "verb" : "get's dry",
                "style" : 3,
                "automation" : [
                    {
                        "type" : "remove_ieffect"
                    }
                ]
            }])
        result     = "Target list entered water" if args.get('t') else "Everyone entered water"
        resultDesc = f''''''
        return f'''embed -title "{result}" -desc "{resultDesc}" -footer "{footer}" -thumb "{image}"'''


</drac2>
